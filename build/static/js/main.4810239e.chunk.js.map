{"version":3,"sources":["components/closer.jsx","components/providers/CVDataProvider.jsx","components/providers/HelpProvider.jsx","components/TurnOnHelp.jsx","components/list-holder.jsx","components/forms/schoolsValidationForm.jsx","components/helpBubble.jsx","components/forms/personalDetailsForm.jsx","components/cv-ui/PersonalDetails.jsx","components/cv-ui/NameTitle.jsx","components/cv-ui/JobForm.jsx","components/cv-ui/ExperienceSection.jsx","components/cv-ui.jsx","fonts/Poppins-Bold.ttf","fonts/Poppins-ExtraBold.ttf","components/cv-pdf.jsx","components/providers/StyleProvider.jsx","utils/animations.jsx","components/sidebar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Closer","text","clickFunction","opacity","className","onClick","style","IconButton","aria-label","CancelRounded","CVData","createContext","UpdateCVData","CVDataProvider","children","useState","personalDetails","name","intro","email","address","phone","jobs","id","jobtitle","company","date","description","education","properties","School","Achievement","CVObject","setCVObject","Provider","value","useCVData","useContext","useCVDataUpdate","HelpSwitch","HelpPermissionUpdate","HelpSwitchProvider","helpPermission","setHelpPermission","useHelpPermission","useHelpPermissionUpdate","TurnOnHelp","helpPermissionUpdate","turnedOn","setTurnedOn","ListHolder","title","setPopUpOpen","setPopUpContent","listItems","map","listItem","keyValues","Object","values","keyValue","uuidv4","Button","variant","color","ListForm","CVDataUpdate","editableListItems","setEditableListItems","validationSchema","yup","required","formik","useFormik","initialValues","onSubmit","console","log","resetForm","deleteItem","itemId","itemsWithDeleted","filter","item","handleSubmit","TextField","fullWidth","label","onChange","handleChange","error","touched","Boolean","errors","helperText","marginTop","type","minHeight","sumthn","DraggableListItems","editable","SchoolsValidationForm","setListItems","alert","JSON","stringify","HelpBubble","suggestions","motion","div","variants","parentVariants","initial","animate","exit","suggestion","y","transition","duration","PersonalDetailsForm","min","showHelpBubble","setShowHelpBubble","addresshelp","showaddresshelp","width","multiline","onFocus","onBlur","AnimatePresence","setShow","startIcon","PersonalDetails","NameTitle","JobForm","chosenJob","isNew","changeJobs","jobInWaiting","chosenJobID","jobsWithEdited","job","submitJob","dateHelp","showDateHelp","marginRight","endIcon","AddCircle","ExperienceSection","editJob","jobId","find","deleteJob","jobsWithDeleted","Job","CvUi","popUpOpen","popUpContent","form","PopUp","exitText","parentFadeIn","slideUp","delayChildren","Font","register","family","src","PoppinsBold","PoppinsExtrabold","colors","StyleSheet","create","page","fontFamily","fontSize","padding","section","para","formGrid","display","flexDirection","column1","column2","h1","marginBottom","fontWeight","h2","h3","jobsContainer","position","paddingLeft","timeline","left","top","height","borderTop","borderBottom","backgroundColor","atnzTheme","createMuiTheme","themeName","palette","primary","light","main","dark","contrastText","secondary","typography","fontWeightRegular","button","textTransform","UpdateStyle","Layout","LayoutChanger","StyleProvider","updateStyle","appLayout","CVLayout","layout","changeLayout","useEffect","document","body","classList","add","ThemeProvider","theme","easy","ease","Sidebar","openID","setOpenID","pointerEvents","menuButtons","icon","content","maximumHeight","MenuButton","isOpen","setIsOpen","parentHeightAnim","delay","DownloadCVContent","App","utils","MomentUtils","AnimateSharedLayout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4810239e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { CancelRounded } from \"@material-ui/icons\";\r\n\r\nconst Closer = ({ text, clickFunction, opacity }) => {\r\n  return (\r\n    <div\r\n      className=\"cancel-button flex align-center\"\r\n      onClick={() => clickFunction()}\r\n      style={{opacity: opacity}}\r\n    >\r\n      <div className=\"subtitle\">{text}</div>\r\n      <IconButton aria-label={text}>\r\n        <CancelRounded />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Closer;\r\n","import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst CVData = createContext();\r\nconst UpdateCVData = createContext();\r\n\r\nconst CVDataProvider = ({ children }) => {\r\n  const [CVObject, setCVObject] = useState({\r\n    personalDetails: {\r\n      name: \"Tim Restieaux\",\r\n      intro:\r\n        \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Id, incidunt quod quam, placeat hic itaque voluptas harum consectetur aspernatur expedita debitis. Magnam, fugiat! Sint Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolore possimus.\",\r\n      email: \"restieauxbro@hotmail.com\",\r\n      address: \"Auckland\",\r\n      phone: \"02108419222\"\r\n    },\r\n    jobs: [\r\n      {\r\n        id: \"jobItem-1\",\r\n        jobtitle: \"Engineer\",\r\n        company: \"Fortnite engineering\",\r\n        date: \"2 years\",\r\n        description:\r\n          \"I was buffing and helping NDT testers during the mill shut. This included confided space and working at heights work.\",\r\n      },\r\n      {\r\n        id: \"jobItem-2\",\r\n        jobtitle: \"Technician\",\r\n        company: \"Caldwell's\",\r\n        date: \"1 Month in January 2020\",\r\n        description:\r\n          \"I am currently working at ISS. Following drawings for welding and fabrication jobs both on site and in the workshop.\",\r\n      },\r\n    ],\r\n    education: [\r\n      {\r\n        id: 1,\r\n        properties: {\r\n          School: \"Hello\",\r\n          Achievement: \"Achievement 1\",\r\n        },\r\n      },\r\n      {\r\n        id: 2,\r\n        properties: {\r\n          School: \"Hello\",\r\n          Achievement: \"Achievement 1\",\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  const [popUpContent, setPopUpContent] = useState({});\r\n  return (\r\n    <CVData.Provider value={CVObject}>\r\n      <UpdateCVData.Provider value={setCVObject}>\r\n        {children}\r\n      </UpdateCVData.Provider>\r\n    </CVData.Provider>\r\n  );\r\n};\r\n\r\nexport default CVDataProvider;\r\n\r\nexport function useCVData() {\r\n  return useContext(CVData);\r\n} // use this in any child to read the context\r\n\r\nexport function useCVDataUpdate() {\r\n  return useContext(UpdateCVData);\r\n} // use this in any child to update the context\r\n","import React, { useState, createContext, useContext } from \"react\";\r\n\r\nexport const HelpSwitch = createContext();\r\nexport const HelpPermissionUpdate = createContext();\r\n\r\nconst HelpSwitchProvider = ({ children }) => {\r\n  const [helpPermission, setHelpPermission] = useState(true);\r\n\r\n  function toggleHelpPermission() {\r\n    setHelpPermission(!helpPermission);\r\n  }\r\n  return (\r\n    <HelpSwitch.Provider value={helpPermission}>\r\n      <HelpPermissionUpdate.Provider value={toggleHelpPermission}>\r\n        {children}\r\n      </HelpPermissionUpdate.Provider>\r\n    </HelpSwitch.Provider>\r\n  );\r\n};\r\nexport default HelpSwitchProvider;\r\n\r\nexport function useHelpPermission() {\r\n    return useContext(HelpSwitch)\r\n} // use this in any child to read the context\r\n\r\nexport function useHelpPermissionUpdate() {\r\n    return useContext(HelpPermissionUpdate)\r\n} // use this in any child to update the context","import React, { useState } from \"react\";\r\nimport ContactSupportRoundedIcon from \"@material-ui/icons/ContactSupportRounded\";\r\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport {\r\n  useHelpPermission,\r\n  useHelpPermissionUpdate,\r\n} from \"./providers/HelpProvider\";\r\n\r\nconst TurnOnHelp = () => {\r\n  const helpPermission = useHelpPermission();\r\n  const helpPermissionUpdate = useHelpPermissionUpdate();\r\n  const [turnedOn, setTurnedOn] = useState(false);\r\n  return (\r\n    <>\r\n      {helpPermission === false ? (\r\n        <div\r\n          className=\"help-button flex align-center\"\r\n          onClick={() => {\r\n            helpPermissionUpdate(true);\r\n            setTurnedOn(true);\r\n          }}\r\n        >\r\n          <IconButton aria-label=\"turn on help\">\r\n            <ContactSupportRoundedIcon />\r\n          </IconButton>\r\n          <div className=\"subtitle\">Turn on helpers</div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {turnedOn ? (\r\n            <div className=\"help-button flex align-center\">\r\n              <IconButton aria-label=\"Helpers on\">\r\n                <ChatBubbleIcon />\r\n              </IconButton>\r\n              <div className=\"subtitle\">Helpers on</div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"placeholder\"></div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TurnOnHelp;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Closer from \"./closer\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useCVData, useCVDataUpdate } from \"./providers/CVDataProvider\";\r\nimport TurnOnHelp from \"./TurnOnHelp\";\r\n\r\nconst ListHolder = ({ title, setPopUpOpen, setPopUpContent }) => {\r\n  const listItems = useCVData().education;\r\n\r\n  function openForm() {\r\n    setPopUpContent(\r\n      <ListForm\r\n        title={title}\r\n        listItems={listItems}\r\n        setPopUpOpen={setPopUpOpen}\r\n      />\r\n    );\r\n    setPopUpOpen(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>{title}</h3>\r\n      <ul>\r\n        {listItems.map((listItem) => {\r\n          const keyValues = Object.values(listItem.properties);\r\n          return (\r\n            <li key={uuidv4()} className=\"list-item\">\r\n              {keyValues.map((keyValue) => (\r\n                <div key={uuidv4()}>{keyValue}</div>\r\n              ))}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <div className=\"cv-ui-button\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => openForm()}>\r\n          Add more\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListHolder;\r\n\r\nconst ListForm = ({ title, listItems, setPopUpOpen }) => {\r\n  const CVData = useCVData();\r\n  const CVDataUpdate = useCVDataUpdate();\r\n  function setListItems(sumthn) {\r\n    CVDataUpdate({ ...CVData, education: sumthn });\r\n  }\r\n\r\n  const [editableListItems, setEditableListItems] = useState(listItems);\r\n\r\n  function deleteItem(itemId) {\r\n    const itemsWithDeleted = editableListItems.filter(\r\n      (item) => item.id !== itemId\r\n    );\r\n    setEditableListItems(itemsWithDeleted);\r\n  }\r\n  const validationSchema = yup.object({\r\n    School: yup\r\n      .string(\"What school or education centre?\")\r\n      .required(\"What school or education centre?\"),\r\n    Achievement: yup\r\n      .string(\"What was your level of achievement?\")\r\n      .required(\"What was your level of achievement?\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      School: \"\",\r\n      Achievement: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      //alert(JSON.stringify(values, null, 2));\r\n      setEditableListItems([\r\n        ...editableListItems,\r\n        { id: uuidv4(), properties: values },\r\n      ]);\r\n      console.log(editableListItems);\r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h3>{title}</h3>\r\n      <div className=\"items-form\">\r\n        <DraggableListItems\r\n          editableListItems={editableListItems}\r\n          deleteItem={deleteItem}\r\n        />\r\n        <div className=\"add-new-item-cnt\">\r\n          <div className=\"subtitle\">Add new</div>\r\n\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div className=\"two-column-grid\">\r\n              <TextField\r\n                fullWidth\r\n                id=\"School\"\r\n                name=\"School\"\r\n                label=\"School\"\r\n                value={formik.values.School}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.School && Boolean(formik.errors.School)}\r\n                helperText={formik.touched.School && formik.errors.School}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                id=\"Achievement\"\r\n                name=\"Achievement\"\r\n                label=\"Achievement\"\r\n                value={formik.values.Achievement}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.Achievement &&\r\n                  Boolean(formik.errors.Achievement)\r\n                }\r\n                helperText={\r\n                  formik.touched.Achievement && formik.errors.Achievement\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"buttons-cnt\" style={{marginTop: \"1rem\"}}>\r\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                Add\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div\r\n          className=\"flex space-between align-center\"\r\n          style={{ marginTop: \"1rem\", minHeight: 50 }}\r\n        >\r\n          <TurnOnHelp />\r\n          <div className=\"buttons-cnt\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                setListItems(editableListItems);\r\n                setPopUpOpen(false);\r\n              }}\r\n            >\r\n              Save and exit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DraggableListItems = ({ editableListItems, deleteItem }) => {\r\n  return (\r\n    <ul className=\"editable-list-items\">\r\n      {editableListItems.map((editable) => {\r\n        const keyValues = Object.values(editable.properties);\r\n        return (\r\n          <li key={uuidv4()} className=\"list-item\">\r\n            {keyValues.map((keyValue) => (\r\n              <div key={uuidv4()} className=\"prop\">\r\n                {keyValue}\r\n              </div>\r\n            ))}\r\n            <Closer clickFunction={() => deleteItem(editable.id)} />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst SchoolsValidationForm = ({ listItems, setListItems }) => {\r\n  const validationSchema = yup.object({\r\n    School: yup\r\n      .string(\"What school or education centre?\")\r\n      .required(\"What school or education centre?\"),\r\n    Achievement: yup\r\n      .string(\"What was your level of achievement?\")\r\n      .required(\"What was your level of achievement?\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      School: \"\",\r\n      Achievement: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      setListItems([...listItems, values]);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-new-item-cnt\">\r\n      <div className=\"subtitle\">Add new</div>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"two-column-grid\">\r\n          <TextField\r\n            fullWidth\r\n            id=\"School\"\r\n            name=\"School\"\r\n            label=\"School\"\r\n            value={formik.values.School}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.School && Boolean(formik.errors.School)}\r\n            helperText={formik.touched.School && formik.errors.School}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"Achievement\"\r\n            name=\"Achievement\"\r\n            label=\"Achievement\"\r\n            type=\"Achievement\"\r\n            value={formik.values.Achievement}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.Achievement && Boolean(formik.errors.Achievement)\r\n            }\r\n            helperText={formik.touched.Achievement && formik.errors.Achievement}\r\n          />\r\n        </div>\r\n        <div className=\"buttons-cnt\">\r\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchoolsValidationForm;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport Closer from \"./closer\";\r\nimport {\r\n  useHelpPermission,\r\n  useHelpPermissionUpdate,\r\n} from \"./providers/HelpProvider\";\r\n\r\nconst HelpBubble = ({ children, suggestions }) => {\r\n  const helpPermission = useHelpPermission();\r\n  const helpPermissionUpdate = useHelpPermissionUpdate();\r\n  return (\r\n    <>\r\n      {helpPermission && (\r\n        <>\r\n          <motion.div\r\n            variants={parentVariants}\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            exit=\"exit\"\r\n            className=\"help-bubble\"\r\n          >\r\n            {children}\r\n            {suggestions && (\r\n              <div className=\"flex\" style={{ marginTop: \"1rem\" }}>\r\n                {suggestions.map((suggestion) => (\r\n                  <div key={suggestion} className=\"suggestion\">\r\n                    {suggestion}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            <Closer clickFunction={() => helpPermissionUpdate(false)} opacity={0.6} />\r\n          </motion.div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HelpBubble;\r\n\r\nconst parentVariants = {\r\n  initial: { opacity: 0, y: 20 },\r\n  animate: { opacity: 1, y: 0 },\r\n  exit: { opacity: 0, transition: { duration: 0.3 } },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport HelpBubble from \"../helpBubble\";\r\nimport { useCVData, useCVDataUpdate } from \"../providers/CVDataProvider\";\r\nimport TurnOnHelp from \"../TurnOnHelp\";\r\n\r\nconst PersonalDetailsForm = ({ setPopUpOpen }) => {\r\n  const CVData = useCVData();\r\n\r\n  const personalDetails = useCVData().personalDetails;\r\n\r\n  const CVDataUpdate = useCVDataUpdate();\r\n\r\n  function setPersonalDetails(sumthn) {\r\n    CVDataUpdate({ ...CVData, personalDetails: sumthn });\r\n  }\r\n\r\n  const validationSchema = yup.object({\r\n    name: yup\r\n      .string(\"What's your name?\")\r\n      .required(\"What's your name?\"),\r\n    intro: yup\r\n      .string(\"Who are you?\")\r\n      .min(60, \"Can you tell us more?\")\r\n      .required(\"Who are you?\"),\r\n    email: yup\r\n      .string(\"What's your email?\")\r\n      .email(\"That doesn't look like an email\")\r\n      .required(\"What's your email?\"),\r\n    address: yup\r\n      .string(\"Where abouts do you live?\")\r\n      .required(\"Where abouts do you live?\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: personalDetails.name,\r\n      email: personalDetails.email,\r\n      address: personalDetails.address,\r\n      intro: personalDetails.intro,\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      setPersonalDetails(values);\r\n      setPopUpOpen(false);\r\n    },\r\n  });\r\n\r\n  const [showHelpBubble, setShowHelpBubble] = useState(false);\r\n  const [addresshelp, showaddresshelp] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <h3>Personal details</h3>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"two-column-grid\">\r\n          <TextField\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label=\"Your name\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.name && Boolean(formik.errors.name)}\r\n            helperText={formik.touched.name && formik.errors.name}\r\n          />\r\n          <TextField\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className=\"help-bubble-focus\">\r\n            <TextField\r\n              style={{ width: \"100%\", marginTop: \"2rem\" }}\r\n              multiline\r\n              id=\"address\"\r\n              name=\"address\"\r\n              label=\"Region and suburb\"\r\n              value={formik.values.address}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.address && Boolean(formik.errors.address)}\r\n              helperText={formik.touched.address && formik.errors.address}\r\n              onFocus={() => showaddresshelp(true)}\r\n              onBlur={() => showaddresshelp(false)}\r\n            />\r\n            <AnimatePresence>\r\n              {addresshelp && (\r\n                <HelpBubble\r\n                  setShow={setShowHelpBubble}\r\n                  suggestions={[\r\n                    \"January - March 2021\",\r\n                    \"Every Sunday at church\",\r\n                  ]}\r\n                >\r\n                  <h3>When? How long?</h3>\r\n                  <p>\r\n                    Show the employer that you can stick to something. Say\r\n                    something like:\r\n                  </p>\r\n                </HelpBubble>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n          <div className=\"help-bubble-focus\">\r\n            <TextField\r\n              style={{ width: \"100%\", marginTop: \"2rem\" }}\r\n              multiline\r\n              id=\"intro\"\r\n              name=\"intro\"\r\n              label=\"Personal introduction\"\r\n              value={formik.values.intro}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.intro && Boolean(formik.errors.intro)}\r\n              helperText={formik.touched.intro && formik.errors.intro}\r\n              onFocus={() => setShowHelpBubble(true)}\r\n              onBlur={() => setShowHelpBubble(false)}\r\n            />\r\n            <AnimatePresence>\r\n              {showHelpBubble && (\r\n                <HelpBubble\r\n                  setShow={setShowHelpBubble}\r\n                  suggestions={[\"Welded frames\", \"Organised time...\"]}\r\n                >\r\n                  <h3>What did you do? 💪</h3>\r\n                  <p>\r\n                    Tell us what your tasks were, or what you managed to\r\n                    accomplish, or anything really! The point is just to show\r\n                    you learned something.\r\n                  </p>\r\n                </HelpBubble>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"flex space-between align-center\"\r\n          style={{ marginTop: \"2rem\", minHeight: 50 }}\r\n        >\r\n          <TurnOnHelp />\r\n          <div className=\"buttons-cnt\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<CheckIcon />}\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonalDetailsForm;\r\n","import React from \"react\";\r\nimport PersonalDetailsForm from \"../forms/personalDetailsForm\";\r\nimport { useCVData } from \"../providers/CVDataProvider\";\r\n\r\nconst PersonalDetails = ({ setPopUpContent, setPopUpOpen }) => {\r\n  const personalDetails = useCVData().personalDetails;\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"personal-details\"\r\n        onClick={() => {\r\n          setPopUpContent(<PersonalDetailsForm setPopUpOpen={setPopUpOpen} />);\r\n          setPopUpOpen(true);\r\n        }}\r\n      >\r\n        <div className=\"image\"></div>\r\n        {personalDetails.email}\r\n        <div>021 084 19222</div>\r\n        {personalDetails.address}\r\n      </div>\r\n      <div\r\n        className=\"introduction section\"\r\n        onClick={() => {\r\n          setPopUpContent(<PersonalDetailsForm setPopUpOpen={setPopUpOpen} />);\r\n          setPopUpOpen(true);\r\n        }}\r\n      >\r\n        <h3>About me</h3>\r\n        <p>{personalDetails.intro}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonalDetails;\r\n","import React from \"react\";\r\nimport PersonalDetailsForm from \"../forms/personalDetailsForm\";\r\nimport { useCVData } from \"../providers/CVDataProvider\";\r\n\r\nconst NameTitle = ({setPopUpContent, setPopUpOpen}) => {\r\n    const personalDetails = useCVData().personalDetails;\r\n  return (\r\n    <div\r\n      className=\"huge-input\"\r\n      onClick={() => {\r\n        setPopUpContent(<PersonalDetailsForm setPopUpOpen={setPopUpOpen} />);\r\n        setPopUpOpen(true);\r\n      }}\r\n    >\r\n      {personalDetails.name ? personalDetails.name : \"Your name\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NameTitle;\r\n","import React, { useState } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { AddCircle } from \"@material-ui/icons\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport HelpBubble from \"../helpBubble\";\r\nimport TurnOnHelp from \"../TurnOnHelp\";\r\nimport { useCVData, useCVDataUpdate } from \"../providers/CVDataProvider\";\r\n\r\nconst JobForm = ({ setPopUpOpen, chosenJob, isNew }) => {\r\n  const jobs = useCVData().jobs;\r\n  const CVData = useCVData();\r\n  const CVDataUpdate = useCVDataUpdate();\r\n  function changeJobs(sumthn) {\r\n    CVDataUpdate({ ...CVData, jobs: sumthn });\r\n  }\r\n  const [jobInWaiting, changeJobInWaiting] = useState({\r\n    ...chosenJob,\r\n    id: uuidv4(),\r\n  });\r\n\r\n  const chosenJobID = chosenJob.id;\r\n\r\n  const validationSchema = yup.object({\r\n    company: yup\r\n      .string(\"Who did you work for or help out?\")\r\n      .required(\"Who did you work for or help out?\"),\r\n    jobtitle: yup\r\n      .string(\"What was the name of your job?\")\r\n      .required(\"What was the name of your job?\"),\r\n    date: yup\r\n      .string(\"How long was this experience\")\r\n      .required(\"How long was this experience\"),\r\n    description: yup\r\n      .string(\"Tell us about what your tasks were.\")\r\n      .min(60, \"Can you tell us more?\")\r\n      .required(\"Tell us about what your tasks were.\"),\r\n  });\r\n\r\n  function submitJob(values) {\r\n    // map through jobs and replace the job with matching id\r\n    const jobsWithEdited = jobs.map((job) => {\r\n      if (job.id === chosenJobID) {\r\n        job = { id: uuidv4(), ...values };\r\n      }\r\n      return job;\r\n    });\r\n    isNew === true\r\n      ? changeJobs([...jobs, { id: uuidv4(), ...values }])\r\n      : changeJobs(jobsWithEdited);\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      company: chosenJob.company,\r\n      jobtitle: chosenJob.jobtitle,\r\n      date: chosenJob.date,\r\n      description: chosenJob.description,\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      submitJob(values);\r\n      setPopUpOpen(false);\r\n    },\r\n  });\r\n\r\n  const [showHelpBubble, setShowHelpBubble] = useState(false);\r\n  const [dateHelp, showDateHelp] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <h3>{isNew ? \"New experience\" : `Edit ${jobInWaiting.company}`}</h3>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"two-column-grid\">\r\n          <TextField\r\n            id=\"company\"\r\n            name=\"company\"\r\n            label=\"Company\"\r\n            value={formik.values.company}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.company && Boolean(formik.errors.company)}\r\n            helperText={formik.touched.company && formik.errors.company}\r\n          />\r\n          <TextField\r\n            id=\"jobtitle\"\r\n            name=\"jobtitle\"\r\n            label=\"Job title\"\r\n            value={formik.values.jobtitle}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.jobtitle && Boolean(formik.errors.jobtitle)}\r\n            helperText={formik.touched.jobtitle && formik.errors.jobtitle}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className=\"help-bubble-focus\">\r\n            <TextField\r\n              style={{ width: \"100%\", marginTop: \"2rem\" }}\r\n              multiline\r\n              id=\"date\"\r\n              name=\"date\"\r\n              label=\"When and for how long?\"\r\n              value={formik.values.date}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.date && Boolean(formik.errors.date)}\r\n              helperText={formik.touched.date && formik.errors.date}\r\n              onFocus={() => showDateHelp(true)}\r\n              onBlur={() => showDateHelp(false)}\r\n            />\r\n            <AnimatePresence>\r\n              {dateHelp && (\r\n                <HelpBubble\r\n                  setShow={setShowHelpBubble}\r\n                  suggestions={[\r\n                    \"January - March 2021\",\r\n                    \"Every Sunday at church\",\r\n                  ]}\r\n                >\r\n                  <h3>When? How long?</h3>\r\n                  <p>\r\n                    Show the employer that you can stick to something. Say\r\n                    something like:\r\n                  </p>\r\n                </HelpBubble>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n          <div className=\"help-bubble-focus\">\r\n            <TextField\r\n              style={{ width: \"100%\", marginTop: \"2rem\" }}\r\n              multiline\r\n              id=\"description\"\r\n              name=\"description\"\r\n              label=\"What did you do there?\"\r\n              value={formik.values.description}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.description && Boolean(formik.errors.description)\r\n              }\r\n              helperText={\r\n                formik.touched.description && formik.errors.description\r\n              }\r\n              onFocus={() => setShowHelpBubble(true)}\r\n              onBlur={() => setShowHelpBubble(false)}\r\n            />\r\n            <AnimatePresence>\r\n              {showHelpBubble && (\r\n                <HelpBubble\r\n                  setShow={setShowHelpBubble}\r\n                  suggestions={[\"Welded frames\", \"Organised time...\"]}\r\n                >\r\n                  <h3>What did you do? 💪</h3>\r\n                  <p>\r\n                    Tell us what your tasks were, or what you managed to\r\n                    accomplish, or anything really! The point is just to show\r\n                    you learned something.\r\n                  </p>\r\n                </HelpBubble>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"flex space-between align-center\"\r\n          style={{ marginTop: \"2rem\", minHeight: 50 }}\r\n        >\r\n          <TurnOnHelp />\r\n          <div className=\"buttons-cnt\">\r\n            <Button\r\n              style={{ marginRight: \"1rem\" }}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<CheckIcon />}\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              endIcon={<AddCircle />}\r\n              type=\"submit\"\r\n            >\r\n              Add more\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobForm;\r\n","import React from \"react\";\r\nimport JobForm from \"../cv-ui/JobForm\";\r\nimport { useCVData, useCVDataUpdate } from \"../providers/CVDataProvider\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { AddCircle } from \"@material-ui/icons\";\r\nimport Closer from \"../closer\";\r\n\r\nconst ExperienceSection = ({ setPopUpOpen, setPopUpContent }) => {\r\n  const jobs = useCVData().jobs;\r\n  const CVData = useCVData();\r\n  const CVDataUpdate = useCVDataUpdate();\r\n  function editJob(jobId) {\r\n    const chosenJob = jobs.find((jobs) => jobs.id === jobId);\r\n    setPopUpContent(\r\n      <JobForm chosenJob={chosenJob} setPopUpOpen={setPopUpOpen} />\r\n    );\r\n    setPopUpOpen(true);\r\n  }\r\n  function deleteJob(jobId) {\r\n    const jobsWithDeleted = jobs.filter((jobs) => jobs.id !== jobId);\r\n    changeJobs(jobsWithDeleted);\r\n  }\r\n  function changeJobs(sumthn) {\r\n    CVDataUpdate({ ...CVData, jobs: sumthn });\r\n  }\r\n  return (\r\n    <div className=\"work-history section\">\r\n      <h3 style={{ marginTop: 0 }}>Experience</h3>\r\n      <div className=\"jobs-list\">\r\n        <div className=\"line\" />\r\n        {jobs.map(({ jobtitle, date, description, company, id }) => (\r\n          <Job\r\n            key={uuidv4()}\r\n            jobtitle={jobtitle}\r\n            company={company}\r\n            id={id}\r\n            date={date}\r\n            description={description}\r\n            editJob={editJob}\r\n            deleteJob={deleteJob}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"cv-ui-button\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          endIcon={<AddCircle />}\r\n          onClick={() => {\r\n            setPopUpOpen(true);\r\n            setPopUpContent(\r\n              <JobForm\r\n                setPopUpOpen={setPopUpOpen}\r\n                chosenJob={{ title: \"\" }}\r\n                isNew={true}\r\n              />\r\n            );\r\n          }}\r\n        >\r\n          Add experience\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperienceSection;\r\n\r\nconst Job = ({\r\n  jobtitle,\r\n  company,\r\n  date,\r\n  description,\r\n  id,\r\n  editJob,\r\n  deleteJob,\r\n}) => {\r\n  const jobId = id;\r\n  return (\r\n    <div id={jobId} key={uuidv4()}>\r\n      <div className=\"job-cnt\">\r\n        <div className=\"content\" onClick={() => editJob(jobId)}>\r\n          <h4>\r\n            <span className=\"dark-text\"> {jobtitle}</span> <br />\r\n            <span className=\"light-text\">{company}</span>\r\n          </h4>\r\n          <p>{date}</p>\r\n          <p>{description}</p>\r\n        </div>\r\n        <div className=\"controls\">\r\n          <Closer clickFunction={() => deleteJob(jobId)} text=\"Delete\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport ListHolder from \"./list-holder\";\r\nimport Closer from \"./closer\";\r\nimport SchoolsValidationForm from \"./forms/schoolsValidationForm\";\r\nimport PersonalDetails from \"./cv-ui/PersonalDetails\";\r\nimport NameTitle from \"./cv-ui/NameTitle\";\r\nimport ExperienceSection from \"./cv-ui/ExperienceSection\";\r\n\r\nconst CvUi = () => {\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  const [popUpContent, setPopUpContent] = useState({});\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cv-builder-cnt\">\r\n      <div className=\"cv-builder-content\">\r\n    \r\n        <div className=\"cv-builder\">\r\n          <div className=\"form-grid\">\r\n            <div className=\"column-1\">\r\n              <PersonalDetails\r\n                setPopUpContent={setPopUpContent}\r\n                setPopUpOpen={setPopUpOpen}\r\n              />\r\n              <div className=\"education section\">\r\n                <ListHolder\r\n                  title=\"Education\"\r\n                  setPopUpOpen={setPopUpOpen}\r\n                  setPopUpContent={setPopUpContent}\r\n                  popUpOpen={popUpOpen}\r\n                  form={<SchoolsValidationForm />}\r\n                />\r\n              </div>\r\n              <div className=\"skills section\"></div>\r\n            </div>\r\n            <div className=\"column-2\">\r\n              <NameTitle\r\n                setPopUpOpen={setPopUpOpen}\r\n                setPopUpContent={setPopUpContent}\r\n              />\r\n\r\n              <ExperienceSection setPopUpOpen={setPopUpOpen}\r\n                setPopUpContent={setPopUpContent} />\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      <AnimatePresence>\r\n        {popUpOpen && (\r\n          <PopUp setPopUpOpen={setPopUpOpen} popUpContent={popUpContent} />\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CvUi;\r\n\r\nconst PopUp = ({ setPopUpOpen, popUpContent, exitText }) => {\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className=\"pop-up-cnt cv-builder-columns\"\r\n        variants={parentFadeIn}\r\n        initial=\"initial\"\r\n        animate=\"animate\"\r\n        exit=\"exit\"\r\n      >\r\n        <div className=\"pop-up-bg\" onClick={() => setPopUpOpen(false)} />\r\n        <div></div>\r\n        <div className=\"flex justify-center align-center\">\r\n          <motion.div variants={slideUp} className=\"pop-up\">\r\n            <Closer clickFunction={() => setPopUpOpen(false)} text={exitText} />\r\n            {popUpContent}\r\n          </motion.div>\r\n        </div>\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst parentFadeIn = {\r\n  initial: { opacity: 0 },\r\n  animate: { opacity: 1, transition: { duration: 0.15, delayChildren: 0.2 } },\r\n  exit: { opacity: 0 },\r\n};\r\n\r\nconst slideUp = {\r\n  initial: { y: 40, opacity: 0 },\r\n  animate: { y: 0, opacity: 1 },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Poppins-Bold.8a0f2aae.ttf\";","export default __webpack_public_path__ + \"static/media/Poppins-ExtraBold.f0b965ee.ttf\";","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  Document,\r\n  Page,\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  Font,\r\n} from \"@react-pdf/renderer\";\r\nimport PoppinsBold from \"../fonts/Poppins-Bold.ttf\";\r\nimport PoppinsExtrabold from \"../fonts/Poppins-ExtraBold.ttf\";\r\n\r\nFont.register({\r\n  family: \"Poppins\",\r\n  src: \"http://fonts.gstatic.com/s/poppins/v1/TDTjCH39JjVycIF24TlO-Q.ttf\",\r\n});\r\n\r\nFont.register({\r\n  family: \"Poppins-bold\",\r\n  src: PoppinsBold,\r\n});\r\n\r\nFont.register({\r\n  family: \"Poppins-extrabold\",\r\n  src: PoppinsExtrabold,\r\n});\r\n\r\nconst colors = {\r\n  light: \"#6ebcd9\",\r\n  dark: \"#074b64\",\r\n};\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    fontFamily: \"Poppins\",\r\n    fontSize: 8,\r\n    padding: 50,\r\n  },\r\n  section: {\r\n    marginTop: 12,\r\n  },\r\n  para: {\r\n    marginTop: 5,\r\n  },\r\n  formGrid: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  column1: {\r\n    width: \"40%\",\r\n    marginRight: 40,\r\n  },\r\n  column2: {\r\n    width: \"calc(100% - 40% - 40px)\",\r\n  },\r\n  h1: {\r\n    fontSize: 25,\r\n    marginBottom: 30,\r\n    fontWeight: 700,\r\n    fontFamily: \"Poppins-extrabold\",\r\n    color: colors.dark,\r\n  },\r\n\r\n  h2: {\r\n    // For section headings\r\n    fontSize: 14,\r\n    color: colors.dark,\r\n  },\r\n  h3: {\r\n    // For titles within sections\r\n    fontSize: 11,\r\n    marginBottom: 5,\r\n  },\r\n  jobsContainer: {\r\n    position: \"relative\",\r\n    paddingLeft: 15,\r\n  },\r\n  timeline: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    height: \"100%\",\r\n    borderTop: \"15px solid white\",\r\n    borderBottom: \"3px solid white\",\r\n    width: 1,\r\n    backgroundColor: colors.light,\r\n  },\r\n});\r\n\r\n// Create Document Component\r\nconst CVPDF = ({ cvData }) => {\r\n  const personalDetails = cvData.personalDetails;\r\n  //   const jobs = useCVData().jobs;\r\n  //   const education = useCVData().education;\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <View style={styles.formGrid}>\r\n          <View style={styles.column1}></View>\r\n          <Text style={{ ...styles.column2, ...styles.h1 }}>\r\n            {personalDetails.name}\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.formGrid}>\r\n          <View style={styles.column1}>\r\n            <Text style={styles.para}>{personalDetails.email}</Text>\r\n            <Text style={styles.para}>{personalDetails.phone}</Text>\r\n            <Text style={styles.para}>{personalDetails.address}</Text>\r\n            <Text style={{ ...styles.section, ...styles.h2 }}>\r\n              Introduction\r\n            </Text>\r\n            <Text style={styles.section}>{personalDetails.intro}</Text>\r\n            <View>\r\n              <Education cvData={cvData} />\r\n            </View>\r\n          </View>\r\n          <View style={styles.column2}>\r\n            <ExperienceSection cvData={cvData} />\r\n          </View>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default CVPDF;\r\n\r\nconst ExperienceSection = ({ cvData }) => {\r\n  const jobs = cvData.jobs;\r\n  return (\r\n    <View>\r\n      <Text style={styles.h2}>Experience</Text>\r\n      <View style={styles.jobsContainer}>\r\n        <View style={styles.timeline} />\r\n        {jobs.map(({ jobtitle, date, description, company, id }) => (\r\n          <Job\r\n            jobtitle={jobtitle}\r\n            company={company}\r\n            id={id}\r\n            date={date}\r\n            description={description}\r\n          />\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Job = ({ jobtitle, company, date, description, id }) => {\r\n  const jobId = id;\r\n  return (\r\n    <View id={jobId} key={uuidv4()} style={styles.section}>\r\n      <View className=\"job-cnt\">\r\n        <View className=\"content\">\r\n          <Text style={styles.h3} className=\"dark-text\">\r\n            {jobtitle}\r\n          </Text>\r\n          <Text style={styles.h3} className=\"light-text\">\r\n            {company}\r\n          </Text>\r\n\r\n          <Text style={styles.para}>{date}</Text>\r\n        </View>\r\n        <Text style={styles.para}>{description}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Education = ({ cvData }) => {\r\n  const listItems = cvData.education;\r\n  return (\r\n    <>\r\n      <Text style={{ ...styles.section, ...styles.h2 }}>Education</Text>\r\n      <View style={styles.para}>\r\n        {listItems.map((listItem) => {\r\n          const keyValues = Object.values(listItem.properties);\r\n          return (\r\n            <View key={uuidv4()} className=\"Viewst-item\">\r\n              {keyValues.map((keyValue) => (\r\n                <Text key={uuidv4()} style={styles.para}>\r\n                  {keyValue}\r\n                </Text>\r\n              ))}\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst atnzTheme = createMuiTheme({\r\n  themeName: \"ATNZ\",\r\n  palette: {\r\n    primary: {\r\n      light: \"#7ecbe8\",\r\n      main: \"#6EBCD9\",\r\n      dark: \"#074B64\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      light: \"#ff7961\",\r\n      main: \"#f44336\",\r\n      dark: \"#ba000d\",\r\n      contrastText: \"#000\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"Poppins\",\r\n    color: \"rgb(46,46,46)\",\r\n    fontWeightRegular: 400,\r\n    fontSize: 14,\r\n    button: {\r\n      fontSize: \"1rem\",\r\n      textTransform: \"none\",\r\n    },\r\n  },\r\n});\r\n\r\nconst competenzTheme = createMuiTheme({\r\n  themeName: \"Competenz\",\r\n  palette: {\r\n    primary: {\r\n      light: \"#7ecbe8\",\r\n      main: \"#21A3D9\",\r\n      dark: \"#121773\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      light: \"#ff7961\",\r\n      main: \"#f44336\",\r\n      dark: \"#ba000d\",\r\n      contrastText: \"#000\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"Helvetica\",\r\n    color: \"rgb(46,46,46)\",\r\n    fontWeightRegular: 400,\r\n    fontSize: 14,\r\n    button: {\r\n      fontSize: \"1rem\",\r\n      textTransform: \"none\",\r\n    },\r\n  },\r\n});\r\n\r\nconst UpdateStyle = createContext(); //for MUI theme\r\nconst Layout = createContext(); // for reading layout state only. Actual layout effects come from the div with classname {layout}\r\nconst LayoutChanger = createContext(); // for page layout\r\n\r\nconst StyleProvider = ({ children }) => {\r\n  const [style, updateStyle] = useState(atnzTheme); // MUI\r\n  const [layout, changeLayout] = useState({\r\n    appLayout: \"\",\r\n    CVLayout: \"\",\r\n  }); // Object for app layout and cv page layout\r\n\r\n  useEffect(() => {\r\n    document.body.classList.add(style.themeName);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={style}>\r\n      <UpdateStyle.Provider value={updateStyle}>\r\n        <Layout.Provider value={layout}>\r\n          <LayoutChanger.Provider value={changeLayout}>\r\n            <div className={layout.appLayout}>{children}</div>\r\n          </LayoutChanger.Provider>\r\n        </Layout.Provider>\r\n      </UpdateStyle.Provider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default StyleProvider;\r\n\r\nexport function StyleTheme() {\r\n  return useContext(UpdateStyle);\r\n}\r\nexport function CurrentLayout() {\r\n  return useContext(Layout);\r\n}\r\nexport function ChangeLayout() {\r\n  return useContext(LayoutChanger);\r\n}\r\n","export const easy = {\r\n    duration: 0.4,\r\n    ease: [0.37, 0.15, 0.48, 0.99],\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport StyleIcon from \"@material-ui/icons/Style\";\r\nimport CVPDF from \"./cv-pdf\";\r\nimport Closer from \"./closer\";\r\nimport { animate, AnimatePresence, motion } from \"framer-motion\";\r\nimport { ChangeLayout, CurrentLayout } from \"./providers/StyleProvider\";\r\nimport { easy } from \"../utils/animations\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport { useCVData } from \"./providers/CVDataProvider\";\r\n\r\nconst Sidebar = () => {\r\n  const [openID, setOpenID] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"cv-builder-columns\"\r\n        style={{ position: \"fixed\", width: \"100%\", pointerEvents: \"none\" }}\r\n        layout\r\n      >\r\n        <div>\r\n          <div className=\"sidebar-cnt\">\r\n            <div className=\"placeholder\"></div>\r\n            <div className=\"sidebar\">\r\n              {menuButtons.map(({ title, icon, content, maximumHeight }) => (\r\n                <MenuButton\r\n                  title={title}\r\n                  icon={icon}\r\n                  content={content}\r\n                  openID={openID}\r\n                  setOpenID={setOpenID}\r\n                  maximumHeight={maximumHeight}\r\n                />\r\n              ))}\r\n            </div>\r\n            {/* <PDFDownloadLink document={<CVPDF cvData={useCVData()} />}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Download\r\n              </Button>\r\n            </PDFDownloadLink> */}\r\n            <div className=\"placeholder\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n\r\nconst MenuButton = ({\r\n  title,\r\n  maximumHeight,\r\n  icon,\r\n  content,\r\n  openID,\r\n  setOpenID,\r\n}) => {\r\n  const layout = CurrentLayout();\r\n  const changeLayout = ChangeLayout();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const parentHeightAnim = {\r\n    initial: { height: 0 },\r\n    animate: { height: maximumHeight, transition: { ...easy, delay: 0.1 } },\r\n    exit: { height: 0, transition: { ...easy, duration: 0.55 } },\r\n  };\r\n\r\n  return (\r\n    <motion.div key={title} className=\"menu-button\" layout transition={easy}>\r\n      <div className=\"button-top-bar\">\r\n        <Button\r\n          fullWidth\r\n          onClick={() => {\r\n            setOpenID(title);\r\n            setIsOpen(true);\r\n            changeLayout({ ...layout, appLayout: \"layout-large-left\" });\r\n          }}\r\n        >\r\n          <div className=\"menu-button-cnt\">\r\n            <div className=\"icon\">{icon}</div>\r\n\r\n            {title}\r\n          </div>\r\n        </Button>\r\n        {openID === title && isOpen && (\r\n          <Closer\r\n            clickFunction={() => {\r\n              setIsOpen(false);\r\n              changeLayout({ ...layout, appLayout: \"\" });\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      <AnimatePresence>\r\n        {openID === title && isOpen && (\r\n          <motion.div\r\n            variants={parentHeightAnim}\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            exit=\"exit\"\r\n            className=\"overflow-cnt\"\r\n          >\r\n            <div className=\"panel-content\">{content}</div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst StylePanel = () => {\r\n  const items = [1, 2, 3, 4, 5, 6];\r\n  return (\r\n    <>\r\n      <h3>Choose layout</h3>\r\n      <motion.div\r\n        variants={gridParent}\r\n        initial=\"initial\"\r\n        animate=\"animate\"\r\n        className=\"grid\"\r\n      >\r\n        {items.map((item) => (\r\n          <motion.div\r\n            variants={gridChild}\r\n            key={item}\r\n            className=\"style-thumb\"\r\n          ></motion.div>\r\n        ))}\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DownloadCVContent = () => {\r\n  return (\r\n    <>\r\n      <h3>Nice one!</h3>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ratione\r\n        similique, tempore amet delectus aliquam facilis.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nconst menuButtons = [\r\n  // {\r\n  //   title: \"Style CV\",\r\n  //   content: <StylePanel />,\r\n  //   icon: <StyleIcon />,\r\n  //   maximumHeight: 500,\r\n  // },\r\n  {\r\n    title: \"Download CV\",\r\n    icon: <GetAppIcon />,\r\n    content: <DownloadCVContent />,\r\n    maximumHeight: 500,\r\n  },\r\n  // {\r\n  //   title: \"Apply for jobs\",\r\n  //   icon: <CreateIcon />,\r\n  //   content:\r\n  //     \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae molestias doloremque asperiores debitis nisi \",\r\n  //   maximumHeight: 100,\r\n  // },\r\n];\r\n\r\nconst gridParent = {\r\n  initial: {},\r\n  animate: { transition: { staggerChildren: 0.1, delayChildren: 0.3 } },\r\n};\r\n\r\nconst gridChild = {\r\n  initial: { y: 20, opacity: 0 },\r\n  animate: { y: 0, opacity: 1, transition: easy },\r\n};\r\n","import React from \"react\";\nimport { AnimateSharedLayout } from \"framer-motion\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport CvUi from \"./components/cv-ui\";\nimport Sidebar from \"./components/sidebar\";\nimport HelpSwitchProvider from \"./components/providers/HelpProvider\";\nimport CVDataProvider from \"./components/providers/CVDataProvider\";\nimport StyleProvider from \"./components/providers/StyleProvider\";\nimport PDFViewerComponent from \"./components/pdf-viewer\";\n\nconst App = () => {\n  return (\n    <>\n      <StyleProvider>\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <CVDataProvider>\n            <AnimateSharedLayout>\n              <div className=\"cv-builder-columns\">\n                <div className=\"placeholder\"></div>\n                <Sidebar />\n\n                <HelpSwitchProvider>\n                  <CvUi />\n                </HelpSwitchProvider>\n              </div>\n            </AnimateSharedLayout>\n          </CVDataProvider>\n        </MuiPickersUtilsProvider>\n      </StyleProvider>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('cv-root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}